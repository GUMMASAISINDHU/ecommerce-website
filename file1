pipeline {
    agent any
 
    parameters {
        // Dropdown for selecting Git branch
        activeChoiceParam('BRANCH_NAME') {
            description('Select the Git branch')
            choiceType('SINGLE_SELECT')
            filterable(true)
            groovyScript {
                script('''
                    def gitUrl = "https://github.com/PandiriMounika2001/myPythonDockerRepo.git"
                    def branches = "git ls-remote --heads ${gitUrl}".execute().text.readLines().collect {
                        it.split()[1].replaceAll('refs/heads/', '')
                    }
                    return branches
                ''')
                fallbackScript('return ["master"]')
            }
        }
 
        // Dropdown for selecting Git commit ID based on the selected branch
        activeChoiceReactiveParam('COMMIT_ID') {
            description('Select the commit ID')
            choiceType('SINGLE_SELECT')
            filterable(true)
            groovyScript {
                script('''
                    if (!binding.hasVariable('BRANCH_NAME') || BRANCH_NAME == '') {
                        return ["Select a branch first"]
                    }
                    def gitUrl = "https://github.com/PandiriMounika2001/myPythonDockerRepo.git"
                    def commits = "git ls-remote ${gitUrl} refs/heads/${BRANCH_NAME}".execute().text.readLines().collect {
                        it.split()[0]
                    }
                    return commits
                ''')
                fallbackScript('return ["No commits found"]')
            }
        }
    }
 
    stages {
        stage('Show Parameters') {
            steps {
                script {
                    echo "Selected Branch: ${params.BRANCH_NAME}"
                    echo "Selected Commit ID: ${params.COMMIT_ID}"
                }
            }
        }
 
        stage('Checkout') {
            steps {
                script {
                    // Checkout the specific commit from the selected branch
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "${params.COMMIT_ID}"]],
                        userRemoteConfigs: [[url: 'https://github.com/PandiriMounika2001/myPythonDockerRepo.git']],
                        extensions: [[$class: 'LocalBranch', localBranch: "${params.BRANCH_NAME}"]]
                    ])
                }
            }
        }
 
        // Add additional stages as required for your build process
    }
}

pipeline {
    agent any

    environment {
        JAVA_HOME = "/usr/lib/jvm/java-11-openjdk-11.0.23.0.9-3.el9.x86_64"
        MAVEN_HOME = "/usr/share/maven"
    }

    // Define the parameters block
    parameters {
        choice(
            name: 'BRANCH',
            choices: readFile('branch.txt').split('\n').collect { it.trim() },
            description: 'Select the branch to build from the available branches.'
        )
    }

    stages {
        stage('Fetch Remote Branches') {
            steps {
                script {
                    // Checkout the repository
                    checkout([
                        $class: 'GitSCM',
                        userRemoteConfigs: [[
                            url: 'https://github.com/GUMMASAISINDHU/demo-java11.git',
                            credentialsId: '88b92039-366f-4db0-910b-f0f4187c7492'
                        ]],
                        branches: [[name: 'refs/heads/master']]
                    ])

                    // Fetching remote branches and writing them to branch.txt
                    sh 'git branch -r | awk \'{print $1}\' > branch.txt'
                }
            }
        }

        stage('Checkout SCM') {
            steps {
                script {
                    // Checkout the code for the chosen branch
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "refs/heads/${params.BRANCH}"]],
                        userRemoteConfigs: [[
                            url: 'https://github.com/GUMMASAISINDHU/demo-java11.git',
                            credentialsId: '88b92039-366f-4db0-910b-f0f4187c7492'
                        ]]
                    ])
                }
            }
        }

        stage('Build and Test') {
            steps {
                echo "Building and testing the project..."
                sh "${MAVEN_HOME}/bin/mvn clean install"
                sh "${MAVEN_HOME}/bin/mvn test"
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying the project..."
                sh "${MAVEN_HOME}/bin/mvn deploy"
            }
        }
    }

    post {
        always {
            junit 'target/surefire-reports/**/*.xml'
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }

        success {
            echo 'Pipeline completed successfully!'
        }

        failure {
            echo 'Pipeline failed.'
        }
    }
}
